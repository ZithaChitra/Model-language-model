diff --git a/nd_lang/lab1/training/__pycache__/util.cpython-38.pyc b/nd_lang/lab1/training/__pycache__/util.cpython-38.pyc
index b35fad0..584ccbc 100644
Binary files a/nd_lang/lab1/training/__pycache__/util.cpython-38.pyc and b/nd_lang/lab1/training/__pycache__/util.cpython-38.pyc differ
diff --git a/nd_lang/lab1/training/run_experiment2.py b/nd_lang/lab1/training/run_experiment2.py
index f325132..9ed747f 100644
--- a/nd_lang/lab1/training/run_experiment2.py
+++ b/nd_lang/lab1/training/run_experiment2.py
@@ -22,10 +22,10 @@ DEFAULT_TRAIN_ARGS = {"batch_size":64, "epochs":16}
 @click.argument("dataset", default="HousingData")
 @click.argument("network", default="mlp")
 @click.argument("model", default="Model")
-@click.argument("--name", default="nd_lang")
+@click.option("--proj-name", default="nd_lang")
 @click.option("--epoch", default=10)
 @click.option("--train-args", default=DEFAULT_TRAIN_ARGS)
-def run_experiment(dataset, network, model, name, epoch, train_args):
+def run_experiment(dataset, network, model, proj_name, epoch, train_args):
 
 	print(f"Running experiment with network '{network}' and dataset '{dataset}''")
 	datasets_module = importlib.import_module("lab1.language_model.datasets.house_pred")
@@ -39,7 +39,7 @@ def run_experiment(dataset, network, model, name, epoch, train_args):
 
 	networks_module = importlib.import_module("lab1.language_model.networks.mlp")
 	network_fn = getattr(networks_module, network)
-	save_net_artifact(network_fn())
+	# save_net_artifact(project_name=proj_name, network=network_fn())
 	
 	# network_args = experiment_config.get("network_args", {})
 
@@ -75,7 +75,7 @@ def run_experiment(dataset, network, model, name, epoch, train_args):
 		train_args = train_args
 	)
 	
-	with wandb.init(project=name, config=config):
+	with wandb.init(project=proj_name, config=config):
 		config = wandb.config
 		model.fit(dataset=config.dataset, callbacks=[WandbCallback()])
 
diff --git a/nd_lang/lab1/training/util.py b/nd_lang/lab1/training/util.py
index 5f59b58..c32c364 100644
--- a/nd_lang/lab1/training/util.py
+++ b/nd_lang/lab1/training/util.py
@@ -12,10 +12,19 @@ import wandb
 
 
 
-def save_net_artifact(project_name, network, config):
+def save_net_artifact(project_name, network):
 	"""
 	Neural Net used artifact. For model versioning
 	"""
+	config = dict(
+			input_shape=(13,),
+			output_shape=(1),
+			layer_size=64,
+			dropout_amount=0.2,
+			num_layers=3
+		)
+
+
 	with wandb.init(project=project_name, job_type="initialize", config=config) as run:
 		config = wandb.config
 		
